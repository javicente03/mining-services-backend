// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  rut       String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  lastname  String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      String   @default("user") @db.VarChar(255)
  active    Boolean  @default(true)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  recover_password Recover_Password[]
  solicitudes Solicitud[]
}

model Recover_Password {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(255)
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Tipos_Trabajos_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  solicitud_tipos_trabajos Solicitud_Tipos_Trabajos[]
}

model Solicitud {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  status    String   @default("pending") @db.VarChar(255)
  description String @db.VarChar(2500)
  createdAt DateTime @default(now())
  tipos_trabajos_solicitud Solicitud_Tipos_Trabajos[]
}

model Solicitud_Tipos_Trabajos {
  id        Int      @id @default(autoincrement())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
  tipoTrabajoId    Int?
  tipoTrabajo      Tipos_Trabajos_Solicitud?    @relation(fields: [tipoTrabajoId], references: [id])
  description String @db.VarChar(2500)
  createdAt DateTime @default(now())
}