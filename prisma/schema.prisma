// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int      @id @default(autoincrement())
  rut       String   @db.VarChar(255)
  razon_social      String   @db.VarChar(255)
  direccion String   @db.VarChar(255)
  telefono  String   @db.VarChar(255)
  logo      String?  @db.VarChar(255)
  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  rut       String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  lastname  String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      String   @default("user") @db.VarChar(255)
  thumbnail String?  @db.VarChar(255)
  active    Boolean  @default(true)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  companyId Int?
  company   Company?  @relation(fields: [companyId], references: [id])
  recover_password Recover_Password[]
  solicitudes Solicitud[] @relation("user_solicitud")
  solicitudes_created_admin Solicitud[] @relation("admin_created_solicitud")
}

model Recover_Password {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(255)
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Tipos_Trabajos_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  solicitud_tipos_trabajos Solicitud_Tipos_Trabajos[]
}

model Equipo_Trabajo_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  type_field    String   @db.VarChar(255) @default("text")
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  solicitud_equipo_trabajo Solicitud_Equipo_Trabajo[]
  opciones_equipo_trabajo_solicitud Opciones_Equipo_Trabajo_Solicitud[]
}

model Opciones_Equipo_Trabajo_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  equipo_trabajo_solicitudId    Int?
  equipo_trabajo_solicitud      Equipo_Trabajo_Solicitud?    @relation(fields: [equipo_trabajo_solicitudId], references: [id])
  solicitud_equipo_trabajo Solicitud_Equipo_Trabajo[]
}

model Componente_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  type_field    String   @db.VarChar(255) @default("text")
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  solicitud_componente Solicitud_Componente[]
  opciones_componente_solicitud Opciones_Componente_Solicitud[]
}

model Opciones_Componente_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  componente_solicitudId    Int?
  componente_solicitud      Componente_Solicitud?    @relation(fields: [componente_solicitudId], references: [id])
  solicitud_componente Solicitud_Componente[]
  presupuesto_ot Presupuesto_OT[]
}

model Servicio_Terreno_Solicitud {
  id        Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  solicitud_servicio_terreno Solicitud_Servicio_Terreno[]
}

model Registro_Fotografico_Solicitud {
  id        Int      @id @default(autoincrement())
  url   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
}

model Solicitud {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id], name: "user_solicitud")
  status    String   @default("pending") @db.VarChar(255)
  description String @db.VarChar(2500)
  createdAt DateTime @default(now())
  isOT Boolean @default(false)
  status_ot String? @db.VarChar(255)
  type_work String @db.VarChar(255) @default("equipo")
  fecha_ingreso DateTime?
  numero_gd String? @db.VarChar(255)
  presupuestoOtId Int?
  createdById Int?
  createdBy User? @relation(fields: [createdById], references: [id], name: "admin_created_solicitud")
  createdByAdmin Boolean @default(false)
  presupuestoOt Presupuesto_OT? @relation(fields: [presupuestoOtId], references: [id])
  tipos_trabajos_solicitud Solicitud_Tipos_Trabajos[]
  equipo_trabajo_solicitud Solicitud_Equipo_Trabajo[]
  componente_solicitud Solicitud_Componente[]
  servicio_terreno_solicitud Solicitud_Servicio_Terreno[]
  registro_fotografico_solicitud Registro_Fotografico_Solicitud[]
  motivo_rechazo_solicitud Motivo_Rechazo_Solicitud[]
  motivo_rechazo_solicitud_cliente Motivo_Rechazo_Solicitud_Cliente[]
}

model Presupuesto_OT {
  id       Int      @id @default(autoincrement())
  lavado Boolean  @default(false)
  evaluacion Boolean  @default(false)
  desarme_evaluacion Boolean  @default(false)
  informe_tecnico String @db.VarChar(2500) @default("")
  tipo_componenteId Int?
  tipo_componente Opciones_Componente_Solicitud? @relation(fields: [tipo_componenteId], references: [id])
  cost Int @default(0)
  date DateTime?
  motivo_rechazo String @db.VarChar(2500) @default("")
  ots Solicitud[]
}

model Motivo_Rechazo_Solicitud {
  id        Int      @id @default(autoincrement())
  description    String   @db.VarChar(2500)
  createdAt DateTime @default(now())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
}

model Motivo_Rechazo_Solicitud_Cliente {
  id        Int      @id @default(autoincrement())
  description    String   @db.VarChar(2500)
  createdAt DateTime @default(now())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
}

model Solicitud_Tipos_Trabajos {
  id        Int      @id @default(autoincrement())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
  tipoTrabajoId    Int?
  tipoTrabajo      Tipos_Trabajos_Solicitud?    @relation(fields: [tipoTrabajoId], references: [id])
  description String @db.VarChar(2500)
  createdAt DateTime @default(now())
}

model Solicitud_Equipo_Trabajo {
  id        Int      @id @default(autoincrement())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
  equipoTrabajoId    Int?
  equipoTrabajo      Equipo_Trabajo_Solicitud?    @relation(fields: [equipoTrabajoId], references: [id])
  description String @db.VarChar(2500)
  idOpcion    Int?
  opcion      Opciones_Equipo_Trabajo_Solicitud?    @relation(fields: [idOpcion], references: [id])
  createdAt DateTime @default(now())
}

model Solicitud_Componente {
  id        Int      @id @default(autoincrement())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
  componenteId    Int?
  componente      Componente_Solicitud?    @relation(fields: [componenteId], references: [id])
  description String @db.VarChar(2500)
  idOpcion    Int?
  opcion      Opciones_Componente_Solicitud?    @relation(fields: [idOpcion], references: [id])
  createdAt DateTime @default(now())
}

model Solicitud_Servicio_Terreno {
  id        Int      @id @default(autoincrement())
  solicitudId    Int?
  solicitud      Solicitud?    @relation(fields: [solicitudId], references: [id])
  servicioTerrenoId    Int?
  servicioTerreno      Servicio_Terreno_Solicitud?    @relation(fields: [servicioTerrenoId], references: [id])
  description String @db.VarChar(2500)
  createdAt DateTime @default(now())
}